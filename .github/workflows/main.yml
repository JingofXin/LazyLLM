name: LazyLLM ci
on:
  workflow_dispatch:
  push:
    branches:
      - sxy/workflow
    paths-ignore:
      - "**.md"
      - ".git*"
      - "docs/assets/**"
      - "docs/**"
  pull_request:
    branches:
      - sxy/workflow
    paths-ignore:
      - "**.md"
      - ".git*"
      - "docs/assets/**"
      - "docs/**"


jobs:
  check-rerun:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # test

      - name: Get SHAs
        id: get_shas
        run: |
          CURRENT_SHA=$(git rev-parse HEAD)
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            PREVIOUS_SHA=$(git rev-parse HEAD^)
          else
            PREVIOUS_SHA=$CURRENT_SHA
          fi
          echo "CURRENT_SHA=$CURRENT_SHA" >> $GITHUB_ENV
          echo "PREVIOUS_SHA=$PREVIOUS_SHA" >> $GITHUB_ENV
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
            echo "BASE_SHA=$BASE_SHA" >> $GITHUB_ENV
          fi
      - name: Restore Cache (Push)
        if: ${{ github.event_name == 'push' }}
        uses: actions/cache@v4
        with:
          path: cache_result/
          key: python-result-cache-${{ env.PREVIOUS_SHA }}

      - name: Restore Cache (Pull Request)
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/cache@v4
        with:
          path: cache_result/
          key: python-result-cache-${{ env.BASE_SHA }}

      - name: Show run attempt
        run: echo "GITHUB_RUN_ATTEMPT=$GITHUB_RUN_ATTEMPT"
      - name: Conditional step if rerun
        if: ${{ github.run_attempt != 1 }}
        run: |
          echo "This is a re-run! (GITHUB_RUN_ATTEMPT=${GITHUB_RUN_ATTEMPT})"
          echo "MY_VAR=seconds" >> $GITHUB_ENV
      - name: Conditional step if first run
        if: ${{ github.run_attempt == 1 }}
        run: |
          echo "This is the first run."
          echo "MY_VAR=first" >> $GITHUB_ENV
      - name: Show ENV
        run: |
          echo $MY_VAR
      - name: Prepare workspace
        run: |
          mkdir -p cache_result
          ls cache_result -alh
      - name: Exe func
        id: exe_func
        run: |
          echo $MY_PATH
          python -c "print('ok!')" >cache_result/info2.log 2>&1
      - name: Success branch
        if: ${{ success() && steps.exe_func.conclusion == 'success' }}
        run: |
          echo "✅ Function executed successfully!"
          ls cache_result -alh
      - name: Failure branch
        if: ${{ failure() && steps.exe_func.conclusion == 'failure' }}
        run: |
          echo "❌ Function execution failed!"

      - name: Success upload cache (Push)
        if: ${{ success() && steps.exe_func.conclusion == 'success' && github.event_name == 'push' }}
        uses: actions/cache/save@v4
        with:
          path: cache_result/
          key: python-result-cache-${{ env.CURRENT_SHA }}